	//===============
	//FIELD
	//===============
	public static final int WIDTH = 200;
	public static final int HEGHT = 200;
	
	public DeckComponent dcPlayer;
	public DeckComponent dcPlayerOpnt1;
	public DeckComponent dcPlayerOpnt2;
	public DeckComponent dcPlayerOpnt3;
	
	
	//===============
	//CONSTRUCTORS
	//==============
	public BoardComponent(CardDeck deckCurrentPly){
		//Inicializa variable field
		dcPlayer 		= new DeckComponent(deckCurrentPly);
		dcPlayerOpnt1	= new DeckComponent(12);
		dcPlayerOpnt2	= new DeckComponent(12);
		dcPlayerOpnt3	= new DeckComponent(12);
		//Board set up
		this.setLayout(new BorderLayout());
		this.setVisible(true);
		this.setSize(200, 200);
	}
	public BoardComponent(){
		//Inicializa variable field
		dcPlayer 		= new DeckComponent();
		dcPlayerOpnt1	= new DeckComponent();
		dcPlayerOpnt2	= new DeckComponent();
		dcPlayerOpnt3	= new DeckComponent();
		
		//Board set up
		this.setLayout(new BorderLayout());
		this.setVisible(true);
		this.setSize(WIDTH, HEGHT);
	}
	

	//===============
	//METHODS
	//===============
	@Override
	public void paintComponent(Graphics g){
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		
		g2.drawImage(ImageRegistry.getImage("boardBackground.png"), null, 0, 0);
		
		this.add(dcPlayer, BorderLayout.SOUTH);
		System.out.println("ggg");
	}
	
	
	public void setCurrentPlayerDeck(CardDeck cd){
		dcPlayer.setCardDeck(cd);
		repaint();
	}
	
	public void setOpnt1PlayerDeck(int amntOfCard){
		dcPlayerOpnt1.setAmntOfCards(amntOfCard);
		repaint();
	}
	public void setOpnt2PlayerDeck(int amntOfCard){
		dcPlayerOpnt2.setAmntOfCards(amntOfCard);
		repaint();
	}
	public void setOpnt3PlayerDeck(int amntOfCard){
		dcPlayerOpnt3.setAmntOfCards(amntOfCard);
		repaint();
	}